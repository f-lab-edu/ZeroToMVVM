################################
# 아래 공백줄에 "[타입](대상 : 파일 혹은 범위) 제목" 작성 (50자 이내)
# ex) [Feat(MainActivity.kt)] 로그인 기능 추가

# 바로 아래 한 줄 공백 유지 (머릿말과 본문의 분리를 위함)

################################
# (Optional) 아래 공백줄에 본문(구체적인 내용) 작성 
# ex)
# 1. 무엇을 수정했는지
# 2. 왜 수정했는지
# 여러 줄의 메시지를 작성할 땐 "-" 혹은 번호로 구분 (한 줄은 72자 이내)

################################
# (Optional) 꼬릿말(footer)을 아랫줄에 작성 (현재 커밋과 관련된 이슈 번호 추가 등)
# ex) Close #52365

######## Commit Message ########
# feat 	 	: 새로운 기능 추가
# fix 	 	: 버그 수정
# config 	: 설정, 프로젝트 구성 관련
# docs	 	: 문서 관련
# test 	 	: 테스트 코드 관련
# refactor 	: 코드 수정 관련 (기능 변경 혹은 로직 변경 혹은 보완)
# style 	: 코드 의미에 영향을 주지 않는 변경사항 (컨벤션 적용, 줄 바꿈, 공백 제거 등)
# remove 	: 코드의 삭제가 있을 때 사용 (필요하지 않은 코드 삭제)
# chore 	: 그 외 자잘한 수정에 대한 커밋
# 영문 작성 참고 : https://blog.ull.im/engineering/2019/03/10/logs-on-git.html 
# 템플릿 구성 참고 : https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit
################################